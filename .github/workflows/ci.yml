name: CI
on: pull_request
jobs:
  check-links:
    name: Check links
    runs-on: ubuntu-latest
    env:
      URL: https://deploy-preview-${{github.event.number}}--kuma.netlify.app
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/setup-go@v3
      - run: |
          go install github.com/raviqqe/muffet/v2@v2.4.9
      - name: Wait for Pages changed to be neutral
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: waitForCheck
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Pages changed - kuma"
          timeoutSeconds: 1200
      - name: Wait for Netlify site to be ready
        if: steps.waitForCheck.outputs.conclusion == 'neutral'
        uses: jakepartusch/wait-for-netlify-action@v1.2
        id: waitForNetlify
        with:
          site_name: "kuma"
          max_timeout: 1200
      - name: link checker
        run: |
          `go env GOPATH`/bin/muffet ${URL} --exclude https://twitter.com --max-connections-per-host=8 --exclude 127.0.0.1 --exclude 'https://github.com/spiffe/spiffe/blob/main/standards/X509-SVID.md.*' --rate-limit 50 --timeout 60
      - name: link checker dev docs
        run: |
          `go env GOPATH`/bin/muffet ${URL}/docs/dev --exclude https://twitter.com --max-connections-per-host=8 --exclude 127.0.0.1 --exclude 'https://github.com/spiffe/spiffe/blob/main/standards/X509-SVID.md.*' --rate-limit 50 --timeout 60

  installer-sh:
    name: Test installer.sh
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # NOTE: for each new OS, the check must be explicitly set as required in Github
        os:
          - amazonlinux:2022
          - debian:bookworm
          - centos:7
          - redhat/ubi8:8.6
          - ubuntu:22.10
          - archlinux:latest
          - fedora:latest
    container:
      image: ${{ matrix.os }}
    steps:
      - name: Prepare OS
        run: |
          (apt-get update && apt-get install curl -y) || true
          yum install tar gzip -y || true
      - uses: actions/checkout@v3
      - name: Run installer.sh
        run: sh docs/.vuepress/public/installer.sh
      - name: Check kumactl version
        run: sh file ./kuma-*/bin/kumactl && [[ $(file ./kuma-*/bin/kumactl) != *x86_64* ]] && exit 1
  installer-sh-arm64:
    runs-on: ubuntu-latest
    name: Test installer.sh on arm64
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}
          install: |
            apt-get update && apt-get install curl -y
            apt-get install -y tar gzip

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            sh docs/.vuepress/public/installer.sh && file ./kuma-*/bin/kumactl
            sh [[ $(file ./kuma-*/bin/kumactl) != *aarch64* ]] && exit 1
